class Shipping extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addline1: '',
      addline2: '',
      email: '',
      state: '',
      zipcode: '',
      phone: ''
    };
    this.inputHandler = this.inputHandler.bind(this);
    this.submitHandler = this.submitHandler.bind(this);
  }

  inputHandler(e) {
    for (var key in this.state) {
      if (key === e.target.className) {
        this.setState({
          [key]: e.target.value
        });
      }
    }
  }

  submitHandler(e) {
    e.preventDefault();
    this.props.childStateHandler(this.state);
    this.props.shippingHandler();
  }

  render() {
    return React.createElement("div", null, React.createElement("h3", null, "Shipping Information"), React.createElement("form", null, "Address Line 1:", ' ', React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "Line 1",
      className: "addline1",
      type: "text"
    }), React.createElement("br", null), "Address Line 2:", ' ', React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "Line 2",
      className: "addline2",
      type: "text"
    }), React.createElement("br", null), "City: ", React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "City",
      className: "email",
      type: "text"
    }), React.createElement("br", null), "State: ", React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "State",
      className: "state",
      type: "text"
    }), React.createElement("br", null), "ZipCode:", ' ', React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "Zipcode",
      className: "zipcode",
      type: "number"
    }), React.createElement("br", null), "Phone Number:", ' ', React.createElement("input", {
      onChange: this.inputHandler,
      placeholder: "Phone",
      className: "phone",
      type: "number"
    })), React.createElement("input", {
      onClick: this.submitHandler,
      type: "submit",
      value: "Next"
    }));
  }

} // export default Shipping;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9zaGlwcGluZy5qc3giXSwibmFtZXMiOlsiU2hpcHBpbmciLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImFkZGxpbmUxIiwiYWRkbGluZTIiLCJlbWFpbCIsInppcGNvZGUiLCJwaG9uZSIsImlucHV0SGFuZGxlciIsImJpbmQiLCJzdWJtaXRIYW5kbGVyIiwiZSIsImtleSIsInRhcmdldCIsImNsYXNzTmFtZSIsInNldFN0YXRlIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsImNoaWxkU3RhdGVIYW5kbGVyIiwic2hpcHBpbmdIYW5kbGVyIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFOLFNBQXVCQyxLQUFLLENBQUNDLFNBQTdCLENBQXVDO0FBQ3RDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNoQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFXO0FBQ1RDLE1BQUFBLFFBQVEsRUFBRSxFQUREO0FBRVRDLE1BQUFBLFFBQVEsRUFBRSxFQUZEO0FBR1RDLE1BQUFBLEtBQUssRUFBRSxFQUhFO0FBSVRILE1BQUFBLEtBQUssRUFBRSxFQUpFO0FBS1RJLE1BQUFBLE9BQU8sRUFBRSxFQUxBO0FBTVRDLE1BQUFBLEtBQUssRUFBRTtBQU5FLEtBQVg7QUFRQSxTQUFLQyxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0EsU0FBS0MsYUFBTCxHQUFxQixLQUFLQSxhQUFMLENBQW1CRCxJQUFuQixDQUF3QixJQUF4QixDQUFyQjtBQUNEOztBQUVERCxFQUFBQSxZQUFZLENBQUNHLENBQUQsRUFBRztBQUNiLFNBQUssSUFBSUMsR0FBVCxJQUFnQixLQUFLVixLQUFyQixFQUEyQjtBQUN6QixVQUFJVSxHQUFHLEtBQUtELENBQUMsQ0FBQ0UsTUFBRixDQUFTQyxTQUFyQixFQUErQjtBQUM3QixhQUFLQyxRQUFMLENBQWM7QUFBQyxXQUFDSCxHQUFELEdBQU1ELENBQUMsQ0FBQ0UsTUFBRixDQUFTRztBQUFoQixTQUFkO0FBQ0Q7QUFDRjtBQUNGOztBQUVETixFQUFBQSxhQUFhLENBQUNDLENBQUQsRUFBRztBQUNkQSxJQUFBQSxDQUFDLENBQUNNLGNBQUY7QUFDQSxTQUFLaEIsS0FBTCxDQUFXaUIsaUJBQVgsQ0FBNkIsS0FBS2hCLEtBQWxDO0FBQ0EsU0FBS0QsS0FBTCxDQUFXa0IsZUFBWDtBQUNEOztBQUdGQyxFQUFBQSxNQUFNLEdBQUc7QUFDUixXQUNDLGlDQUNDLHVEQURELEVBRUMscURBQ2lCLEdBRGpCLEVBRUM7QUFBTyxNQUFBLFFBQVEsRUFBRSxLQUFLWixZQUF0QjtBQUFvQyxNQUFBLFdBQVcsRUFBQyxRQUFoRDtBQUF5RCxNQUFBLFNBQVMsRUFBQyxVQUFuRTtBQUE4RSxNQUFBLElBQUksRUFBQztBQUFuRixNQUZELEVBR00sK0JBSE4scUJBSXNCLEdBSnRCLEVBS0M7QUFBTyxNQUFBLFFBQVEsRUFBRSxLQUFLQSxZQUF0QjtBQUFvQyxNQUFBLFdBQVcsRUFBQyxRQUFoRDtBQUF5RCxNQUFBLFNBQVMsRUFBQyxVQUFuRTtBQUE4RSxNQUFBLElBQUksRUFBQztBQUFuRixNQUxELEVBTU0sK0JBTk4sWUFPTztBQUFPLE1BQUEsUUFBUSxFQUFFLEtBQUtBLFlBQXRCO0FBQW9DLE1BQUEsV0FBVyxFQUFDLE1BQWhEO0FBQXVELE1BQUEsU0FBUyxFQUFDLE9BQWpFO0FBQXlFLE1BQUEsSUFBSSxFQUFDO0FBQTlFLE1BUFAsRUFRTSwrQkFSTixhQVNRO0FBQU8sTUFBQSxRQUFRLEVBQUUsS0FBS0EsWUFBdEI7QUFBb0MsTUFBQSxXQUFXLEVBQUMsT0FBaEQ7QUFBd0QsTUFBQSxTQUFTLEVBQUMsT0FBbEU7QUFBMEUsTUFBQSxJQUFJLEVBQUM7QUFBL0UsTUFUUixFQVVNLCtCQVZOLGNBV1UsR0FYVixFQVlDO0FBQU8sTUFBQSxRQUFRLEVBQUUsS0FBS0EsWUFBdEI7QUFBb0MsTUFBQSxXQUFXLEVBQUMsU0FBaEQ7QUFBMEQsTUFBQSxTQUFTLEVBQUMsU0FBcEU7QUFBOEUsTUFBQSxJQUFJLEVBQUM7QUFBbkYsTUFaRCxFQWFNLCtCQWJOLG1CQWNlLEdBZGYsRUFlQztBQUFPLE1BQUEsUUFBUSxFQUFFLEtBQUtBLFlBQXRCO0FBQW9DLE1BQUEsV0FBVyxFQUFDLE9BQWhEO0FBQXdELE1BQUEsU0FBUyxFQUFDLE9BQWxFO0FBQTBFLE1BQUEsSUFBSSxFQUFDO0FBQS9FLE1BZkQsQ0FGRCxFQW1CSztBQUFPLE1BQUEsT0FBTyxFQUFFLEtBQUtFLGFBQXJCO0FBQW9DLE1BQUEsSUFBSSxFQUFDLFFBQXpDO0FBQWtELE1BQUEsS0FBSyxFQUFDO0FBQXhELE1BbkJMLENBREQ7QUF1QkE7O0FBdERxQyxDLENBeUR2QyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFNoaXBwaW5nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZT17XG4gICAgICBhZGRsaW5lMTogJycsXG4gICAgICBhZGRsaW5lMjogJycsXG4gICAgICBlbWFpbDogJycsXG4gICAgICBzdGF0ZTogJycsXG4gICAgICB6aXBjb2RlOiAnJyxcbiAgICAgIHBob25lOiAnJ1xuICAgIH1cbiAgICB0aGlzLmlucHV0SGFuZGxlciA9IHRoaXMuaW5wdXRIYW5kbGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdWJtaXRIYW5kbGVyID0gdGhpcy5zdWJtaXRIYW5kbGVyLmJpbmQodGhpcyk7XG4gIH1cbiAgXG4gIGlucHV0SGFuZGxlcihlKXtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5zdGF0ZSl7XG4gICAgICBpZiAoa2V5ID09PSBlLnRhcmdldC5jbGFzc05hbWUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtba2V5XTplLnRhcmdldC52YWx1ZX0pXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc3VibWl0SGFuZGxlcihlKXtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5wcm9wcy5jaGlsZFN0YXRlSGFuZGxlcih0aGlzLnN0YXRlKTtcbiAgICB0aGlzLnByb3BzLnNoaXBwaW5nSGFuZGxlcigpO1xuICB9XG5cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXY+XG5cdFx0XHRcdDxoMz5TaGlwcGluZyBJbmZvcm1hdGlvbjwvaDM+XG5cdFx0XHRcdDxmb3JtPlxuXHRcdFx0XHRcdEFkZHJlc3MgTGluZSAxOnsnICd9XG5cdFx0XHRcdFx0PGlucHV0IG9uQ2hhbmdlPXt0aGlzLmlucHV0SGFuZGxlcn0gcGxhY2Vob2xkZXI9XCJMaW5lIDFcIiBjbGFzc05hbWU9XCJhZGRsaW5lMVwiIHR5cGU9XCJ0ZXh0XCIgLz5cbiAgICAgICAgICA8YnI+PC9icj5cbiAgICAgICAgICBBZGRyZXNzIExpbmUgMjp7JyAnfVxuXHRcdFx0XHRcdDxpbnB1dCBvbkNoYW5nZT17dGhpcy5pbnB1dEhhbmRsZXJ9IHBsYWNlaG9sZGVyPVwiTGluZSAyXCIgY2xhc3NOYW1lPVwiYWRkbGluZTJcIiB0eXBlPVwidGV4dFwiIC8+XG4gICAgICAgICAgPGJyPjwvYnI+XG5cdFx0XHRcdFx0Q2l0eTogPGlucHV0IG9uQ2hhbmdlPXt0aGlzLmlucHV0SGFuZGxlcn0gcGxhY2Vob2xkZXI9XCJDaXR5XCIgY2xhc3NOYW1lPVwiZW1haWxcIiB0eXBlPVwidGV4dFwiIC8+XG4gICAgICAgICAgPGJyPjwvYnI+XG5cdFx0XHRcdFx0U3RhdGU6IDxpbnB1dCBvbkNoYW5nZT17dGhpcy5pbnB1dEhhbmRsZXJ9IHBsYWNlaG9sZGVyPVwiU3RhdGVcIiBjbGFzc05hbWU9XCJzdGF0ZVwiIHR5cGU9XCJ0ZXh0XCIgLz5cbiAgICAgICAgICA8YnI+PC9icj5cblx0XHRcdFx0XHRaaXBDb2RlOnsnICd9XG5cdFx0XHRcdFx0PGlucHV0IG9uQ2hhbmdlPXt0aGlzLmlucHV0SGFuZGxlcn0gcGxhY2Vob2xkZXI9XCJaaXBjb2RlXCIgY2xhc3NOYW1lPVwiemlwY29kZVwiIHR5cGU9XCJudW1iZXJcIiAvPlxuICAgICAgICAgIDxicj48L2JyPlxuXHRcdFx0XHRcdFBob25lIE51bWJlcjp7JyAnfVxuXHRcdFx0XHRcdDxpbnB1dCBvbkNoYW5nZT17dGhpcy5pbnB1dEhhbmRsZXJ9IHBsYWNlaG9sZGVyPVwiUGhvbmVcIiBjbGFzc05hbWU9XCJwaG9uZVwiIHR5cGU9XCJudW1iZXJcIiAvPlxuXHRcdFx0XHQ8L2Zvcm0+XG4gICAgICAgIDxpbnB1dCBvbkNsaWNrPXt0aGlzLnN1Ym1pdEhhbmRsZXJ9IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIk5leHRcIj48L2lucHV0PlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG4vLyBleHBvcnQgZGVmYXVsdCBTaGlwcGluZztcbiJdfQ==